bestScore = 0
local function load_highscore()
	local filename = sys.get_save_file("sys_save_load", "bestScore")
	local data = sys.load(filename)
	return data.bestScore or 0
end

function init(self)
	msg.post(".", "acquire_input_focus")

	bestScore = load_highscore()
	msg.post("#startScene", hash("updateScore"), { score = bestScore })
end

function on_message(self, message_id, message, sender)
	if message_id == hash("setHome") then
		msg.post("#startScene", "enable")
		msg.post("#kitchenScene", "disable")
	elseif message_id == hash("updateScore") then
		bestScore = message.score

		local filename = sys.get_save_file("sys_save_load", "bestScore")
		sys.save(filename, { bestScore = bestScore })
		
		local text = gui.get_node("bestScore")
		gui.set_text(text, "best score: " .. bestScore)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") then
		local start = gui.get_node("startButton")
		if gui.pick_node(start, action.x, action.y) then
			if action.released then
				msg.post("mainWindow", "start")
			end

			gui.animate(start, gui.PROP_COLOR, vmath.vector4(0.7, 0.7, 0.7, 1), gui.EASING_INOUTQUAD, 0.1)
			gui.animate(start, gui.PROP_SCALE, vmath.vector3(2, 2, 1) * 0.7, gui.EASING_INOUTQUAD, 0.1)
		else
			gui.animate(start, gui.PROP_COLOR, vmath.vector4(1, 1, 1, 1), gui.EASING_INOUTQUAD, 0.1)
			gui.animate(start, gui.PROP_SCALE, vmath.vector3(2, 2, 1), gui.EASING_INOUTQUAD, 0.1)
		end
	end
end