local isEnable																-- is showing this scene

local function getBestScore()
	return sys.load(sys.get_save_file("sys_save_load", "bestScore")).bestScore or 0
end

function init(self)
	msg.post(".", "acquire_input_focus")
	
	isEnable = true

	gui.set_text(															-- set best score on scene
		gui.get_node("bestScore"), 
		"best score:" .. getBestScore()
	)
end

local function onHide(self, node)
	msg.post("#startScene", "disable")										-- swap scenes and start game
	msg.post("#kitchenScene", "show")
	msg.post("mainWindow", "start")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("setStart") and not isEnable then
		isEnable = true														-- swap scenes
		msg.post("#startScene", "enable")
		msg.post("#kitchenScene", "disable")

		gui.set_text(														-- update best score
			gui.get_node("bestScore"), 
			"best score:" .. getBestScore()
		)

		local n0 = gui.get_node("bestScore")								-- fade in text and buttons
		local n1 = gui.get_node("gameName")
		local n2 = gui.get_node("startButton")
		local colorN0 = gui.get_color(n0)
		local colorN1 = gui.get_color(n1)
		local colorN2 = gui.get_color(n2)
		colorN0.w = 1
		colorN1.w = 1
		colorN2.w = 1
																			-- smooth change color and scale
		gui.animate(n0, gui.PROP_COLOR, colorN0, gui.EASING_INOUTQUAD, 0.5)
		gui.animate(n1, gui.PROP_COLOR, colorN1, gui.EASING_INOUTQUAD, 0.5)
		gui.animate(n2, gui.PROP_COLOR, vmath.vector4(1, 1, 1, 1), gui.EASING_INOUTQUAD, 0.5)
		gui.animate(n2, gui.PROP_SCALE, vmath.vector3(2, 2, 1), gui.EASING_INOUTQUAD, 0.5, 0.0)
	elseif message_id == hash("setKitchen") and isEnable then
		isEnable = false

		local n0 = gui.get_node("bestScore")								-- fade out text and buttons
		local n1 = gui.get_node("gameName")
		local n2 = gui.get_node("startButton")
		local colorN0 = gui.get_color(n0)
		local colorN1 = gui.get_color(n1)
		local colorN2 = gui.get_color(n2)
		colorN0.w = 0
		colorN1.w = 0
		colorN2.w = 0
																			-- when animation done, swap scenes
		gui.animate(n0, gui.PROP_COLOR, colorN0, gui.EASING_INOUTQUAD, 0.5)
		gui.animate(n1, gui.PROP_COLOR, colorN1, gui.EASING_INOUTQUAD, 0.5)
		gui.animate(n2, gui.PROP_COLOR, colorN2, gui.EASING_INOUTQUAD, 0.5, 0.0, onHide)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and isEnable then
		local start = gui.get_node("startButton")
		if gui.pick_node(start, action.x, action.y) then
			if action.released then
				msg.post("#startScene", "setKitchen")						-- start game
			end
																			-- push button
			gui.animate(start, gui.PROP_COLOR, vmath.vector4(0.7, 0.7, 0.7, 1), gui.EASING_INOUTQUAD, 0.1)
			gui.animate(start, gui.PROP_SCALE, vmath.vector3(2, 2, 1) * 0.7, gui.EASING_INOUTQUAD, 0.1)
		else
																			-- push up button
			gui.animate(start, gui.PROP_COLOR, vmath.vector4(1, 1, 1, 1), gui.EASING_INOUTQUAD, 0.1)
			gui.animate(start, gui.PROP_SCALE, vmath.vector3(2, 2, 1), gui.EASING_INOUTQUAD, 0.1)
		end
	end
end