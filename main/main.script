gravity = vmath.vector3(0, -100, 0)
width, height = window.get_size()

bestScore = 0
isGameOver = true
quantityOfHearts = 0
maxHeart = 5
lastHeartX = 1000

function sqr(a)
	return a * a
end

function randReal(from, to)
	return from + (to - from) * math.random()
end

function percents(percent)
	if math.random(1, 100) <= percent then
		return true
	else
		return false
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	
	msg.post("#kitchenScene", "disable")
	self.hearts = {}

	math.randomseed(os.time())
end

local produced
local function getNext()													-- Complicate
	produced = produced + 1
	local k = math.min(produced / 10, 1)

	return 4 - k, randReal(2 + k, 4 + k)
end

local quantity
local quantityOfBombs = 0
local commonFruit = {
	"banana", "orange"
}

local function getAnObject()
	if percents(30) and quantityOfBombs < quantity / 2 then
		quantityOfBombs = quantityOfBombs + 1
		return hash("waterboomb")
	elseif percents(10) and quantityOfHearts < maxHeart then
		return hash("heart")
	elseif percents(10) then
		return hash("frozenLime")
	else
		return hash(commonFruit[math.random(#commonFruit)])
	end
end

local timeToSpawn
function update(self, dt)
	if  isGameOver == true then
		return nil
	end 
	
	timeToSpawn = timeToSpawn - dt
	if timeToSpawn <= 0 then
		if quantity > 0 then												-- output set
			timeToSpawn = randReal(0.1, 0.3)
			quantity = quantity - 1
			local width, height = window.get_size()
			local maxSriteSize = 900
			local scale = 0.2 * math.min(width, height) / maxSriteSize		-- 20% in window
			
			factory.create(
				"mainWindow#pushFruit", 
				vmath.vector3(),
				nil, 
				{ nameFruit = getAnObject() }, 
				scale
			)
		else																-- wait new set
			timeToSpawn, quantity = getNext()
			quantityOfBombs = 0
		end
	end

	if freeze > 0 then
		freeze = freeze - dt
	end
	if boombTime > 0 then 
		boombTime = boombTime - dt
	else 
		boomb = vmath.vector3(0, 0, 0)
	end
end

function on_message(self, message_id, message)
	if message_id == hash("start") then
		timeToSpawn = 3
		quantity = 1
		produced = 0

		for i = 0, 2 do
			msg.post("mainWindow", hash("addHeart"))
		end

		currentScore = 0
		msg.post("mainWindow", hash("setScore"), { int = currentScore })

		boomb = vmath.vector3(0, 0, 0)
		boombTime = 0
		freeze = 0

		isGameOver = false
	elseif message_id == hash("gameOver") then
		while quantityOfHearts > 0 do
			go.delete(self.hearts[quantityOfHearts])
			self.hearts[quantityOfHearts] = nil

			quantityOfHearts = quantityOfHearts - 1
		end
		
		isGameOver = true
		msg.post("mainWindow", hash("windowResult"))
	elseif message_id == hash("removeHeart") then
		go.delete(self.hearts[quantityOfHearts])
		self.hearts[quantityOfHearts] = nil

		quantityOfHearts = quantityOfHearts - 1
		if quantityOfHearts <= 0 then
			msg.post("mainWindow", hash("gameOver"))
		end
	elseif message_id == hash("addHeart") then
		if quantityOfHearts == maxHeart then
			return nil
		end

		local pos = vmath.vector3(
			width - 0.05 * width * quantityOfHearts - 100, 
			500, 
			quantityOfHearts / 10
		)

		quantityOfHearts = quantityOfHearts + 1
		self.hearts[quantityOfHearts] = factory.create("mainWindow#hearts", pos)
	end
end

local pos
function on_input(self, action_id, action)
	if action_id == hash("touch") then
		local currentPos = vmath.vector3(action.x, action.y, 0)

		if action.pressed then
			pos = currentPos
		else
			msg.post(
				"@render:",
				"draw_line",
				{ 
					start_point = currentPos, 
					end_point = pos, 
					color = vmath.vector4(1, 1, 1, 1)
				}
			)
			pos = currentPos
		end
	end
end
